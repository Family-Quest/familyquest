{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Pick_Database-at-public_91_Tables_93_-at-tutor_91_Row_93_.Exclude_keyofDatabase-at-public_91_Tables_93_-at-tutor_91_Row_93_.password__": {
				"properties": {
					"family": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"pseudo": {
						"type": "string"
					},
					"user": {
						"type": "string"
					}
				},
				"required": [
					"family",
					"id",
					"pseudo",
					"user"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Database-at-public_91_Tables_93_-at-tutor_91_Row_93_.password_": {
				"$ref": "#/components/schemas/Pick_Database-at-public_91_Tables_93_-at-tutor_91_Row_93_.Exclude_keyofDatabase-at-public_91_Tables_93_-at-tutor_91_Row_93_.password__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Tutor": {
				"$ref": "#/components/schemas/Omit_Database-at-public_91_Tables_93_-at-tutor_91_Row_93_.password_"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "backend",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"paths": {
		"/tutor": {
			"get": {
				"operationId": "GetTutorByUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tutor"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/tutor/{tutorId}": {
			"get": {
				"operationId": "GetTutorById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tutor"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tutorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}